<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpSnmpLib.Full</name>
    </assembly>
    <members>
        <member name="T:Lextm.SharpSnmpLib.Helper">
            <summary>
            Class Helper.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Helper.ToIPAddress(Lextm.SharpSnmpLib.IP)">
            <summary>
            Converts <see cref="T:Lextm.SharpSnmpLib.IP" /> to <see cref="T:System.Net.IPAddress" />.
            </summary>
            <param name="ip">The <see cref="T:Lextm.SharpSnmpLib.IP" /> object.</param>
            <returns>The <see cref="T:System.Net.IPAddress" /> object.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Helper.ToPhysicalAddress(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts <see cref="T:Lextm.SharpSnmpLib.OctetString" /> to <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="address">The <see cref="T:Lextm.SharpSnmpLib.OctetString" /> object that holds the address.</param>
            <returns>The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="address"/> length is not equal to 6.</exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs">
            <summary>
            Event arguments for agent found event.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.Agent">
            <summary>
            Gets the agent.
            </summary>
            <value>The agent.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.Variable">
            <summary>
            Gets the variable.
            </summary>
            <value>The variable.</value>
            <remarks>If the agent is SNMP v3, this is <c>null</c>.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs"/> class.
            </summary>
            <param name="agent">The agent.</param>
            <param name="variable">The variable.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Discoverer">
            <summary>
            Discoverer class to discover SNMP agents in the same network.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Discoverer.AgentFound">
            <summary>
            Occurs when an SNMP agent is found.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Discoverer.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
            <remarks>The exception is typical <see cref="T:System.Net.Sockets.SocketException"/> here.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discoverer.Discover(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Int32)">
            <summary>
            Discovers agents of the specified version in a specific time interval.
            </summary>
            <param name="version">The version.</param>
            <param name="broadcastAddress">The broadcast address.</param>
            <param name="community">The community.</param>
            <param name="interval">The discovering time interval, in milliseconds.</param>
            <remarks><paramref name="broadcastAddress"/> must be an IPv4 address. IPv6 is not yet supported here.</remarks>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Discovery">
            <summary>
            Discovery class that participates in SNMP v3 discovery process.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Discovery"/> class.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="messageId">The message id.</param>
            <param name="maxMessageSize">The max size of message.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.#ctor(System.Int32,System.Int32,System.Int32,Lextm.SharpSnmpLib.SnmpType)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Discovery"/> class.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="messageId">The message id.</param>
            <param name="maxMessageSize">The max size of message.</param>
            <param name="type">Message type.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Gets the response.
            </summary>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">The receiver.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.EndPointExtension">
            <summary>
            Extension methods for <see cref="T:System.Net.EndPoint"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.EndPointExtension.GetSocket(System.Net.EndPoint)">
            <summary>
            Gets the socket.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ErrorException">
            <summary>
            Error exception of #SNMP. Raised when an error message is received.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ErrorException.Body">
            <summary>
            Message body.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ErrorException.Details">
            <summary>
            Details on error.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.Create(System.String,System.Net.IPAddress,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/>.
            </summary>
            <param name="message">Message.</param>
            <param name="agent">Agent address.</param>
            <param name="body">Error message body.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs">
            <summary>
            Provides data for exception raised event.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs.#ctor(System.Exception)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs"/>.
            </summary>
            <param name="ex">Exception.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage">
            <summary>
            GETBULK request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="nonRepeaters">Non-repeaters.</param>
            <param name="maxRepetitions">Max repetitions.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="nonRepeaters">The non repeaters.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="nonRepeaters">The non repeaters.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage">
            <summary>
            GETNEXT request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage">
            <summary>
            GET request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.IListenerBinding">
            <summary>
            Listener binding interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.IListenerBinding.SendResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends a response message.
            </summary>
            <param name="response">
            A <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </param>
            <param name="receiver">Receiver.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.IListenerBinding.Endpoint">
            <summary>
            Endpoint.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage">
            <summary>
            INFORM request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time ticks.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage">
            <summary>
            SNMP message.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Listener">
            <summary>
            Listener class.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Listener.ErrorIPv4NotSupported">
            <summary>
            Error message for non IP v4 OS.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Listener.ErrorIPv6NotSupported">
            <summary>
            Error message for non IP v6 OS.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Dispose">
            <summary>
            Disposes resources in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Users">
            <summary>
            Gets or sets the users.
            </summary>
            <value>The users.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Start">
            <summary>
            Starts this instance.
            </summary>
            <exception cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Bindings">
            <summary>
            Gets or sets the bindings.
            </summary>
            <value>The bindings.</value>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Listener.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Listener.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.AddBinding(System.Net.IPEndPoint)">
            <summary>
            Adds the binding.
            </summary>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.RemoveBinding(System.Net.IPEndPoint)">
            <summary>
            Removes the binding.
            </summary>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.ClearBindings">
            <summary>
            Clears the bindings.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ListenerBinding">
            <summary>
            Binding class for <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.#ctor(Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.IPEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.ListenerBinding"/> class.
            </summary>
            <param name="users">The users.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ListenerBinding.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
            <remarks>The exception can be both <see cref="T:System.Net.Sockets.SocketException"/> and <see cref="T:Lextm.SharpSnmpLib.SnmpException"/>.</remarks>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ListenerBinding.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.SendResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends a response message.
            </summary>
            <param name="response">
            A <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </param>
            <param name="receiver">Receiver.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Endpoint">
            <summary>
            Gets or sets the endpoint.
            </summary>
            <value>The endpoint.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Start">
            <summary>
            Starts this instance.
            </summary>
            <exception cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Stop">
            <summary>
            Stops.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MalformedMessage">
            <summary>
            Malformed message for v3 due to decryption failures or wrong user names. 
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.MalformedMessage"/> class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="user">The user.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.MalformedMessage"/> class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="user">The user.</param>
            <param name="data">The data encrypted.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.EncryptedScope">
            <summary>
            Encrypted scope data.
            </summary>
            <value>The original scope data from packet, which remains encrypted.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The fake scope, which is used to avoid exceptions in message handling.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Manager">
            <summary>
            SNMP manager component that provides SNMP operations.
            </summary>
            <remarks>
            <para>Drag this component into your form in designer, or create an instance in code.</para>
            <para>Currently only SNMP v1 and v2c operations are supported.</para>
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Manager"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.DefaultVersion">
            <summary>
            Default protocol version for operations.
            </summary>
            <remarks>By default, the value is SNMP v1.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.Timeout">
            <summary>
            Timeout value.
            </summary>
            <remarks>By default, the value is 5,000-milliseconds (5 seconds).</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetSingle(System.Net.IPEndPoint,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Gets a variable bind.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetSingle(System.String,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Gets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetSingle(System.Net.IPAddress,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Gets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Get(System.Net.IPEndPoint,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Get(System.String,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Get(System.Net.IPAddress,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.SetSingle(System.Net.IPEndPoint,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Sets a variable bind.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.SetSingle(System.Net.IPAddress,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Sets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.SetSingle(System.String,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Sets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Set(System.Net.IPEndPoint,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Set(System.String,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Set(System.Net.IPAddress,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetTable(System.Net.IPEndPoint,System.String,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.MaxRepetitions">
            <summary>
            Gets or sets the max repetitions for GET BULK operations.
            </summary>
            <value>The max repetitions.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetTable(System.Net.IPAddress,System.String,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetTable(System.String,System.String,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.Manager"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageFactory">
            <summary>
            Factory that creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from byte format.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Collections.Generic.IEnumerable{System.Char},Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from a string.
            </summary>
            <param name="bytes">Byte string.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Byte[],Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from buffer.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Byte[],System.Int32,System.Int32,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from buffer.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="index">The index.</param>
            <param name="length">The length.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException">
            <summary>
            Message factory exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.GetBytes">
            <summary>
            Gets the bytes.
            </summary>        
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.SetBytes(System.Byte[])">
            <summary>
            Sets the bytes.
            </summary>
            <param name="value">Bytes.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs">
            <summary>
            The <see cref="T:System.EventArgs"/> for one kind of <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>, used when that kind of message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ISnmpMessage,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/>.
            </summary>
            <param name="sender">Sender.</param>
            <param name="message">The message received.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.Message">
            <summary>
            The received message.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.Sender">
            <summary>
            Sender.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Messenger">
            <summary>
            Messenger class contains all static helper methods you need to send out SNMP messages.
            Static methods in Manager or Agent class will be removed in the future.
            </summary>
            <remarks>
            SNMP v3 is not supported by this class. Please use <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage" /> derived classes directly
            if you want to do v3 operations.
            </remarks>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Messenger.RequestCounter">
            <summary>
            RFC 3416 (3.)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Messenger.MessageCounter">
            <summary>
            RFC 3412 (6.)
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Get(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32)">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Set(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32)">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Walk(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode)">
            <summary>
            Walks.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="mode">Walk mode.</param>
            <returns>
            Returns row count if the OID is a table. Otherwise this value is meaningless.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.HasNext(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,Lextm.SharpSnmpLib.Variable@)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="community">The community.</param>
            <param name="seed">The seed.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="next">The next.</param>
            <returns>
                <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkWalk(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Walks.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="mode">Walk mode.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV1(System.Net.EndPoint,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends a TRAP v1 message.
            </summary>
            <param name="receiver">Receiver.</param>
            <param name="agent">Agent.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="generic">Generic code.</param>
            <param name="specific">Specific code.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV2(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.EndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends TRAP v2 message.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="requestId">Request ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendInform(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Sends INFORM message.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetTable(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Int32,System.Int32)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextRequestId">
            <summary>
            Gets the request counter.
            </summary>
            <value>The request counter.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextMessageId">
            <summary>
            Gets the message counter.
            </summary>
            <value>The message counter.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.MaxMessageSize">
            <summary>
            Max message size used in #SNMP. 
            </summary>
            <remarks>
            You can use any value for your own application. 
            Also this value may be changed in #SNMP in future releases.
            </remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextDiscovery">
            <summary>
            Returns a new discovery request.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.DecryptionError">
            <summary>
            If the privacy module returns failure, then the message can
            not be processed, so the usmStatsDecryptionErrors counter is
            incremented and an error indication (decryptionError) together
            with the OID and value of the incremented counter is returned
            to the calling module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.AuthenticationFailure">
            <summary>
            If the authentication module returns failure, then the message
            cannot be trusted, so the usmStatsWrongDigests counter is
            incremented and an error indication (authenticationFailure)
            together with the OID and value of the incremented counter is
            returned to the calling module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UnknownEngineId">
            <summary>
            If the value of the msgAuthoritativeEngineID field in the
            securityParameters is unknown then
            the usmStatsUnknownEngineIDs counter is incremented, and an
            error indication (unknownEngineID) together with the OID and
            value of the incremented counter is returned to the calling
            module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UnknownSecurityName">
            <summary>
            Information about the value of the msgUserName and
            msgAuthoritativeEngineID fields is extracted from the Local
            Configuration Datastore (LCD, usmUserTable).  If no information
            is available for the user, then the usmStatsUnknownUserNames
            counter is incremented and an error indication
            (unknownSecurityName) together with the OID and value of the
            incremented counter is returned to the calling module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NotInTimeWindow">
            <summary>
            If the message is considered to be outside of the Time Window
            then the usmStatsNotInTimeWindows counter is incremented and
            an error indication (notInTimeWindow) together with the OID,
            the value of the incremented counter, and an indication that
            the error must be reported with a securityLevel of authNoPriv,
            is returned to the calling module
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UnsupportedSecurityLevel">
            <summary>
            If the information about the user indicates that it does not
            support the securityLevel requested by the caller, then the
            usmStatsUnsupportedSecLevels counter is incremented and an error
            indication (unsupportedSecurityLevel) together with the OID and
            value of the incremented counter is returned to the calling
            module.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetNextDiscovery(Lextm.SharpSnmpLib.SnmpType)">
            <summary>
            Returns a new discovery request.
            </summary>
            <param name="type">Message type.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkHasNext(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable}@,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage@)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="receiver">The receiver.</param>
            <param name="community">The community.</param>
            <param name="seed">The seed.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="next">The next.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns>
            <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetErrorMessage(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Returns error message for the specific <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <param name="id">The OID.</param>
            <returns>Error message.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.NumberGenerator">
            <summary>
            A counter that generates ID.
            </summary>
            <remarks>The request ID is used to identifier sessions.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.NumberGenerator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.NumberGenerator"/> class.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.NumberGenerator.NextId">
            <summary>
            Returns next ID. This method is thread-safe within this instance of NumberGenerator.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.PortInUseException">
            <summary>
            Exception raised when an IP endpoint is already in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.PortInUseException.Endpoint">
            <summary>
            The endpoint already in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ReportMessage">
            <summary>
            REPORT message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.Scope,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/> class.
            </summary>
            <param name="version">The version code.</param>
            <param name="header">The header.</param>
            <param name="parameters">The security parameters.</param>
            <param name="scope">The scope.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Parameters">
            <summary>
            Security parameters.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage">
            <summary>
            Response message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage"/> with all contents.
            </summary>
            <param name="requestId">Request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="error">Error code.</param>
            <param name="index">Error index.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.Scope,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Boolean,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="scope">The scope.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="needAuthentication">if set to <c>true</c>, authentication is needed.</param>
            <param name="length">The length bytes.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ErrorStatus">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ErrorIndex">
            <summary>
            Error index.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage">
            <summary>
            SET request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension">
            <summary>
            Extension methods for <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.TypeCode(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Gets the <see cref="T:Lextm.SharpSnmpLib.SnmpType"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Variables(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Variables.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.RequestId(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Request ID.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.MessageId(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Gets the message ID.
            </summary>
            <value>The message ID.</value>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <remarks>For v3, message ID is different from request ID. For v1 and v2c, they are the same.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Pdu(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            PDU.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Community(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Community name.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Send(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Send(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.SendAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.SendAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Port number.</param>
            <param name="registry">User registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Port number.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.Sockets.Socket)">
            <summary>
            Sends an  <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <param name="registry">The user registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponseAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.Sockets.Socket)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <param name="registry">The user registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.EndGetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous read.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that stores state information and any user defined data for this asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.BeginGetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.Sockets.Socket,System.AsyncCallback,System.Object)">
            <summary>
            Begins to asynchronously send an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> to an <see cref="T:System.Net.IPEndPoint"/>.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="receiver">Agent.</param>
            <param name="registry">The user registry.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state object.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.IsRunningOnMono">
            <summary>
            Tests if running on Mono.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.PackMessage(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Byte[])">
            <summary>
            Packs up the <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TimeoutException">
            <summary>
            Timeout exception type of #SNMP.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TimeoutException.Timeout">
            <summary>
            The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/> instance.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.Create(System.Net.IPAddress,System.Int32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/>.
            </summary>
            <param name="agent">Agent address</param>
            <param name="timeout">Timeout</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message">
            <summary>
            Trap message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> with all content.
            </summary>
            <param name="version">Protocol version</param>
            <param name="agent">Agent address</param>
            <param name="community">Community name</param>
            <param name="enterprise">Enterprise</param>
            <param name="generic">Generic</param>
            <param name="specific">Specific</param>
            <param name="time">Time</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.#ctor(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> instance with a message body.
            </summary>
            <param name="body">Message body</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Community">
            <summary>
            Community name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.AgentAddress">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Generic">
            <summary>
            Generic type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Specific">
            <summary>
            Specific type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Version">
            <summary>
            Protocol version.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.ToBytes">
            <summary>
            To byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
            <remarks><see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> returns null here.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
            <remarks><see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> returns null here.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.PackMessage(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISnmpData[])">
            <summary>
            Packs the message.
            </summary>
            <param name="version">The version.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message">
            <summary>
            TRAP v2 message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> instance with all content.
            </summary>
            <param name="version">Version code.</param>
            <param name="community">Community.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time stamp.</param>
            <param name="variables">Variables.</param>
            <param name="requestId">Request ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="engineId">The engine ID.</param>
            <param name="engineBoots">The engine boots.</param>
            <param name="engineTime">The engine time.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.WalkMode">
            <summary>
            Walk mode.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.WalkMode.Default">
            <summary>
            Default mode walk to the end of MIB view.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.WalkMode.WithinSubtree">
            <summary>
            In this mode, walk within sub-tree.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ObjectIdentifierConverter">
            <summary>
            The <see cref="T:System.ComponentModel.TypeConverter"/> dedicated for the <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the arguments.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfAdminStatus">
            <summary>
            ifAdminStatus object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfAdminStatus.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfAdminStatus"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfAdminStatus.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfDescr">
            <summary>
            ifDescr object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfDescr.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfDescr"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfDescr.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfIndex">
            <summary>
            ifIndex object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfIndex.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfIndex"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfIndex.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfInDiscards">
            <summary>
            ifInDiscards object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfInDiscards.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfInDiscards"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfInDiscards.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfInErrors">
            <summary>
            ifInError object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfInErrors.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfInErrors"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfInErrors.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfInNUcastPkts">
            <summary>
            ifInNUcastPkts object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfInNUcastPkts.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfInNUcastPkts"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfInNUcastPkts.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfInOctets">
            <summary>
            ifInOctets object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfInOctets.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfInOctets"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfInOctets.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfInUcastPkts">
            <summary>
            ifInUcastPkts object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfInUcastPkts.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfInUcastPkts"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfInUcastPkts.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfInUnknownProtos">
            <summary>
            ifInUnknownProtos object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfInUnknownProtos.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfInUnknownProtos"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfInUnknownProtos.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfLastChange">
            <summary>
            ifLastChange.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfLastChange.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfLastChange"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfLastChange.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfMtu">
            <summary>
            ifMtu object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfMtu.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfMtu"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfMtu.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfNumber">
            <summary>
            ifNumber object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfNumber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfNumber"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfNumber.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOperStatus">
            <summary>
            ifOperStatus.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOperStatus.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOperStatus"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOperStatus.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOutDiscards">
            <summary>
            ifOutDiscards object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOutDiscards.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOutDiscards"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOutDiscards.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOutErrors">
            <summary>
            ifOutErrors object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOutErrors.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOutErrors"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOutErrors.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOutNUcastPkts">
            <summary>
            ifOutNUcastPkts object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOutNUcastPkts.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOutNUcastPkts"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOutNUcastPkts.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOutOctets">
            <summary>
            ifOutOctets.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOutOctets.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOutOctets"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOutOctets.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOutQLen">
            <summary>
            ifOutQLen.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOutQLen.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOutQLen"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOutQLen.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfOutUcastPkts">
            <summary>
            ifOutUcastPkts.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfOutUcastPkts.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfOutUcastPkts"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfOutUcastPkts.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfPhysAddress">
            <summary>
            ifPhysAddress.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfPhysAddress.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfPhysAddress"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfPhysAddress.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfSpecific">
            <summary>
            ifSpecific.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfSpecific.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfSpecific"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfSpecific.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfSpeed">
            <summary>
            ifSpeed.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfSpeed.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfSpeed"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfSpeed.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfTable">
            <summary>
            ifTable object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfTable"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfTable.Objects">
            <summary>
            Gets the objects in the table.
            </summary>
            <value>
            The objects.
            </value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.IfType">
            <summary>
            ifType.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.IfType.#ctor(System.Int32,System.Net.NetworkInformation.NetworkInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.IfType"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="networkInterface">The network interface.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.IfType.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
            <exception cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"></exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysContact">
            <summary>
            sysContact object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysContact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysContact"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysContact.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysDescr">
            <summary>
            sysDescr object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysDescr.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysDescr"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysDescr.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysLocation">
            <summary>
            sysLocation object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysLocation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysLocation"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysLocation.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysName">
            <summary>
            sysName object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysName.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysName"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysName.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysObjectId">
            <summary>
            sysObjectId object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysObjectId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysObjectId"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysObjectId.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysORLastChange">
            <summary>
            sysORLastChange object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysORLastChange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysORLastChange"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysORLastChange.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysORTable">
            <summary>
            sysORTable object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysORTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysORTable"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysORTable.Objects">
            <summary>
            Gets the objects in the table.
            </summary>
            <value>The objects.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysServices">
            <summary>
            sysServices object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysServices.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysServices"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysServices.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysUpTime">
            <summary>
            sysUpTime object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysUpTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysUpTime"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysUpTime.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.OperationException">
            <summary>
            Operation exception of #SNMP.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OperationException.Agent">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OperationException.Details">
            <summary>
            Details on operation.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.Create(System.String,System.Net.IPAddress)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> with a specific <see cref="T:System.Net.IPAddress"/>.
            </summary>
            <param name="message">Message</param>
            <param name="agent">Agent address</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException">
            <summary>
            Access failure exception. 
            Raised when,
            1. GET operation is performed on a write-only object.
            2. SET operation is performed on a read-only object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider">
            <summary>
            Composed membership provider, who owns internal providers. If the request is authenticated by any of the internal providers, it is considered as authenticated.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider.#ctor(Lextm.SharpSnmpLib.Pipeline.IMembershipProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider"/> class.
            </summary>
            <param name="providers">The internal providers.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.EngineGroup">
            <summary>
            Engine group which contains all related objects.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.EngineGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.EngineGroup"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineId">
            <summary>
            Gets the engine id.
            </summary>
            <value>The engine id.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineBoots">
            <summary>
            Gets or sets the engine boots.
            </summary>
            <value>The engine boots.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineTime">
            <summary>
            Gets the engine time.
            </summary>
            <value>The engine time.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineTimeData">
            <summary>
            Gets the engine time data.
            </summary>
            <value>
            The engine time data. [0] is engine boots, [1] is engine time.
            </value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.EngineGroup.IsInTime(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Verifies if the request comes in time.
            </summary>
            <param name="currentTimeData">The current time data.</param>
            <param name="pastReboots">The past reboots.</param>
            <param name="pastTime">The past time.</param>
            <returns>
              <c>true</c> if the request is in time window; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.NotInTimeWindow">
            <summary>
            Gets not-in-time-window counter.
            </summary>
            <value>
            Counter variable.
            </value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.UnknownEngineId">
            <summary>
            Gets unknown engine ID counter.
            </summary>
            <value>
            Counter variable.
            </value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.UnknownSecurityName">
            <summary>
            Gets unknown security name counter.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.DecryptionError">
            <summary>
            Gets decryption error counter.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.UnsupportedSecurityLevel">
            <summary>
            Gets unsupported security level counter.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.AuthenticationFailure">
            <summary>
            Gets authentication failure counter.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetBulkMessageHandler">
            <summary>
            GET BULK message handler.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetBulkMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetMessageHandler">
            <summary>
            GET message handler.
            </summary>
            <remarks>
            Follows RFC 3416 4.2.1.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetNextMessageHandler">
            <summary>
            GET NEXT message handler.
            </summary>    
            <remarks>
            Follows RFC 3416 4.2.2.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetNextMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetNextV1MessageHandler">
            <summary>
            GET NEXT message handler.
            </summary>    
            <remarks>
            Follows RFC 1157, 4.1.3
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetNextV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetV1MessageHandler">
            <summary>
            GET message handler.
            </summary>
            <remarks>
            Follows RFC 1157, 4.1.2
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.HandlerMapping">
            <summary>
            Handler mapping class, who is used to map incoming messages to their handlers.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.#ctor(System.String,System.String,Lextm.SharpSnmpLib.Pipeline.IMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.HandlerMapping"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="command">The command.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.HandlerMapping"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="command">The command.</param>
            <param name="type">The type.</param>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.Handler">
            <summary>
            Gets the handler.
            </summary>
            <value>The handler.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.CanHandle(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Determines whether this instance can handle the specified message.
            </summary>
            <param name="message">The message.</param>
            <returns>
                <c>true</c> if this instance can handle the specified message; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ILogger">
            <summary>
            Logger interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ILogger.Log(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Logs an entry.
            </summary>
            <param name="context">Message context.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.IMembershipProvider">
            <summary>
            Membership provider interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.IMembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.IMessageHandler">
            <summary>
            Message handler interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.IMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageHandler">
            <summary>
            Message handler for INFORM.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageHandler.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageHandler.InvokeMessageReceived(Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs)">
            <summary>
            Invokes the message received.
            </summary>
            <param name="e">The <see cref="T:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs">
            <summary>
            Inform request message received event args.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.InformRequestMessage,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs"/> class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="request">The request.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs.InformRequestMessage">
            <summary>
            Gets or sets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.InformRequestMessageReceivedEventArgs.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ISnmpContext">
            <summary>
            SNMP context interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.CopyRequest(Lextm.SharpSnmpLib.ErrorCode,System.Int32)">
            <summary>
            Copies the request variable bindings to response.
            </summary>
            <param name="status">The status.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
            <value>The created time.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.Request">
            <summary>
            Gets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.TooBig">
            <summary>
            Gets a value indicating whether [too big].
            </summary>
            <value><c>true</c> if the response is too big; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.SendResponse">
            <summary>
            Sends out response message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.HandleMembership">
            <summary>
            Handles the membership authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpContext.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ISnmpObject">
            <summary>
            SNMP object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory">
            <summary>
            Message handler factory.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory.#ctor(Lextm.SharpSnmpLib.Pipeline.HandlerMapping[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory"/> class.
            </summary>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory.GetHandler(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Gets the handler.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext">
            <summary>
            Normal SNMP context class. It is v1 and v2c specific.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.#ctor(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.CopyRequest(Lextm.SharpSnmpLib.ErrorCode,System.Int32)">
            <summary>
            Copies the request variable bindings to response.
            </summary>
            <param name="status">The status.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.HandleMembership">
            <summary>
            Handles the membership.
            </summary>
            <returns>Always returns <c>false</c>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.NullMessageHandler">
            <summary>
            A placeholder.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NullMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ObjectStore">
            <summary>
            SNMP object store, who holds all implemented SNMP objects in the agent.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ObjectStore.GetObject(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets the object.
            </summary>
            <param name="id">The object id.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ObjectStore.GetNextObject(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets the next object.
            </summary>
            <param name="id">The object id.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ObjectStore.Add(Lextm.SharpSnmpLib.Pipeline.ISnmpObject)">
            <summary>
            Adds the specified <see cref="T:Lextm.SharpSnmpLib.Pipeline.ISnmpObject"/>.
            </summary>
            <param name="newObject">The object.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject">
            <summary>
            Scalar object interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject"/> class.
            </summary>
            <param name="id">The ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject"/> class.
            </summary>
            <param name="dots">The ID string.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject"/> class.
            </summary>
            <param name="dots">The ID string.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ScalarObject.Variable">
            <summary>
            Gets the variable.
            </summary>
            <value>The variable.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ScalarObject.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ScalarObject.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext">
            <summary>
            Secure SNMP context. It is specific to v3.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.#ctor(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Pipeline.EngineGroup,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="group">The engine core group.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.HandleMembership">
            <summary>
            Handles the membership.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SetMessageHandler">
            <summary>
            SET message handler.
            </summary>    
            <remarks>
            Follows RFC 3416 4.2.1.
            Not supported scenarios are, 
              wrongLength, 
              wrongEncoding, 
              wrongValue, 
              noCreation,
              inconsistentName,
              inconsistentValue,
              resourceUnavailable,
              commitFailed,
              undoFailed
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SetMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SetV1MessageHandler">
            <summary>
            SET message handler.
            </summary>    
            <remarks>
            Follows RFC 1157, 4.1.5
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SetV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplication">
            <summary>
            SNMP application class, who is a pipeline for message processing.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.#ctor(Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory,Lextm.SharpSnmpLib.Pipeline.ILogger,Lextm.SharpSnmpLib.Pipeline.ObjectStore,Lextm.SharpSnmpLib.Pipeline.IMembershipProvider,Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplication"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="logger">The logger.</param>
            <param name="store">The store.</param>
            <param name="provider">The provider.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.Init(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Initializes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.ProcessingFinished">
            <summary>
            Gets a value indicating whether processing is finished.
            </summary>
            <value><c>true</c> if processing is finished; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.Process">
            <summary>
            Processes an incoming request.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.CompleteProcessing">
            <summary>
            Completes the processing.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory">
            <summary>
            SNMP application factory, who holds all pipeline instances.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.#ctor(Lextm.SharpSnmpLib.Pipeline.ILogger,Lextm.SharpSnmpLib.Pipeline.ObjectStore,Lextm.SharpSnmpLib.Pipeline.IMembershipProvider,Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="store">The store.</param>
            <param name="membershipProvider">The membership provider.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.#ctor(Lextm.SharpSnmpLib.Pipeline.ObjectStore,Lextm.SharpSnmpLib.Pipeline.IMembershipProvider,Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory"/> class.
            </summary>
            <param name="store">The store.</param>
            <param name="membershipProvider">The membership provider.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.Create(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Creates a pipeline for the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.Reuse(Lextm.SharpSnmpLib.Pipeline.SnmpApplication)">
            <summary>
            Reuses the specified pipeline.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase">
            <summary>
            SNMP context.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.#ctor(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Pipeline.EngineGroup,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="group">The engine core group.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
            <value>The created time.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.Request">
            <summary>
            Gets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.Users">
            <summary>
            Gets the users.
            </summary>
            <value>The users.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.Group">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>The objects.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.TooBig">
            <summary>
            Gets a value indicating whether [too big].
            </summary>
            <value><c>true</c> if the response is too big; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.SendResponse">
            <summary>
            Sends out response message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.CopyRequest(Lextm.SharpSnmpLib.ErrorCode,System.Int32)">
            <summary>
            Copies the request variable bindings to response.
            </summary>
            <param name="status">The status.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.HandleMembership">
            <summary>
            Handles the membership authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextBase.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpContextFactory">
            <summary>
            SNMP context factory.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextFactory.Create(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Pipeline.EngineGroup,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="group">The engine group.</param>
            <param name="binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine">
            <summary>
            SNMP engine, who is the core of an SNMP entity (manager or agent).
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.#ctor(Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory,Lextm.SharpSnmpLib.Messaging.Listener,Lextm.SharpSnmpLib.Pipeline.EngineGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="listener">The listener.</param>
            <param name="group">Engine core group.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Dispose">
            <summary>
            Disposes resources in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Listener">
            <summary>
            Gets or sets the listener.
            </summary>
            <value>The listener.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Start">
            <summary>
            Starts the engine.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Active">
            <summary>
            Gets a value indicating whether this <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpObjectBase">
            <summary>
            SNMP basic object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpObjectBase.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpObjectBase.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TableObject">
            <summary>
            Object that represents a table.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TableObject.Objects">
            <summary>
            Gets the objects in the table.
            </summary>
            <value>The objects.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TableObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TableObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler">
            <summary>
            Message handler for TRAP v1.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler.InvokeMessageReceived(Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs)">
            <summary>
            Invokes the message received event handler.
            </summary>
            <param name="e">The <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs">
            <summary>
            Trap v1 message received event args.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.TrapV1Message,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs"/> class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="request">The request.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs.TrapV1Message">
            <summary>
            Gets or sets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageReceivedEventArgs.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler">
            <summary>
            Message handler for TRAP v2.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.ISnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler.InvokeMessageReceived(Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs)">
            <summary>
            Invokes the message received event handler.
            </summary>
            <param name="e">The <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs">
            <summary>
            Trap v2 message received event args.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.TrapV2Message,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs"/> class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="request">The request.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs.TrapV2Message">
            <summary>
            Gets or sets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageReceivedEventArgs.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider">
            <summary>
            SNMP version 1 membership provider, who checks community names for security.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider"/> class.
            </summary>
            <param name="getCommunity">The get community.</param>
            <param name="setCommunity">The set community.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider">
            <summary>
            SNMP version 2 membership provider, who checks community names for security.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider"/> class.
            </summary>
            <param name="getCommunity">The get community.</param>
            <param name="setCommunity">The set community.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.Version3MembershipProvider">
            <summary>
            SNMP version 3 membership provider. Not yet implemented.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version3MembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.ISnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.AESPrivacyProvider">
            <summary>
            Privacy provider for AES 128.
            </summary>
            <remarks>
            This is an experimental port from SNMP#NET project. As AES is not part of SNMP RFC, this class is provided as it is.
            If you want other AES providers, you can port them from SNMP#NET in a similar manner.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.AESPrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.Encrypt(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Encrypt scoped PDU using DES encryption protocol
            </summary>
            <param name="unencryptedData">Unencrypted scoped PDU byte array</param>
            <param name="key">Encryption key. Key has to be at least 32 bytes is length</param>
            <param name="engineBoots">Engine boots.</param>
            <param name="engineTime">Engine time.</param>
            <param name="privacyParameters">Privacy parameters out buffer. This field will be filled in with information
            required to decrypt the information. Output length of this field is 8 bytes and space has to be reserved
            in the USM header to store this information</param>
            <returns>Encrypted byte array</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key is null or length of the encryption key is too short.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.Decrypt(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Decrypt DES encrypted scoped PDU.
            </summary>
            <param name="encryptedData">Source data buffer</param>
            <param name="engineBoots">Engine boots.</param>
            <param name="engineTime">Engine time.</param>
            <param name="key">Decryption key. Key length has to be 32 bytes in length or longer (bytes beyond 32 bytes are ignored).</param>
            <param name="privacyParameters">Privacy parameters extracted from USM header</param>
            <returns>Decrypted byte array</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when encrypted data is null or length == 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key length is less then 32 byte or if privacy parameters
            argument is null or length other then 8 bytes</exception>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.PrivacyParametersLength">
            <summary>
            Returns the length of privacyParameters USM header field. For AES, field length is 8.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.MinimumKeyLength">
            <summary>
            Returns minimum encryption/decryption key length. For DES, returned value is 16.
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.MaximumKeyLength">
            <summary>
            Return maximum encryption/decryption key length. For DES, returned value is 16
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.ToString">
            <summary>
            Returns a string that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider">
            <summary>
            Privacy provider for DES.
            </summary>
            <remarks>Ported from SNMP#NET PrivacyDES class.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt scoped PDU using DES encryption protocol
            </summary>
            <param name="unencryptedData">Unencrypted scoped PDU byte array</param>
            <param name="key">Encryption key. Key has to be at least 32 bytes is length</param>
            <param name="privacyParameters">Privacy parameters out buffer. This field will be filled in with information
            required to decrypt the information. Output length of this field is 8 bytes and space has to be reserved
            in the USM header to store this information</param>
            <returns>Encrypted byte array</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key is null or length of the encryption key is too short.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt DES encrypted scoped PDU.
            </summary>
            <param name="encryptedData">Source data buffer</param>
            <param name="key">Decryption key. Key length has to be 32 bytes in length or longer (bytes beyond 32 bytes are ignored).</param>
            <param name="privacyParameters">Privacy parameters extracted from USM header</param>
            <returns>Decrypted byte array</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when encrypted data is null or length == 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key length is less then 32 byte or if privacy parameters
            argument is null or length other then 8 bytes</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.GetIV(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})">
            <summary>
            Generate IV from the privacy key and salt value returned by GetSalt method.
            </summary>
            <param name="privacyKey">16 byte privacy key</param>
            <param name="salt">Salt value returned by GetSalt method</param>
            <returns>IV value used in the encryption process</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.GetKey(System.Byte[])">
            <summary>
            Extract and return DES encryption key.
            Privacy password is 16 bytes in length. Only the first 8 bytes are used as DES password. Remaining
            8 bytes are used as pre-IV value.
            </summary>
            <param name="privacyPassword">16 byte privacy password</param>
            <returns>8 byte DES encryption password</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.PrivacyParametersLength">
            <summary>
            Returns the length of privacyParameters USM header field. For DES, field length is 8.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.MinimumKeyLength">
            <summary>
            Returns minimum encryption/decryption key length. For DES, returned value is 16.
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.MaximumKeyLength">
            <summary>
            Return maximum encryption/decryption key length. For DES, returned value is 16
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider">
            <summary>
            Authentication provider using MD5.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope data.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider">
            <summary>
            Authentication provider using SHA-1.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
    </members>
</doc>
