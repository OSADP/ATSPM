@model MOE.Common.Models.ViewModel.Chart.DefaultChartsViewModel

@{
    ViewBag.Title = "UDOT Automated Traffic Signal Performance Measures";
}
<script type="text/javascript">function LoadFromUrl() {
    @Html.Raw(Model.RunMetricJavascript)
}</script>

<h2>Signal</h2>
<form id="MainForm" class="col-md-12 well">
    <div id="SignalSearchContainer" class="col-md-6 panel-min-width">
        @Html.Partial("SignalSearch", new ViewDataDictionary(Model.SignalSearch))
    </div>
    <div class="col-md-3 chart-selection-min-width">
        <div class="panel panel-default">
            <div class="panel-heading">Chart Selection</div>
            <div class="panel-body">
                <div id="MetricsListContainer"></div>
            </div>
        </div>
    </div>
    <div class="col-md-3 chart-selection-min-width">
        <div class="options-div" id="Options"></div>
    </div>
    <div class="col-md-6 col-sm-12 col-xs-12 panel-min-width">
        <div class="panel panel-default">
            <div class="panel-heading">Date Selection</div>
            <div class="panel-body">
                <div class="col-md-7 col-sm-7 col-xs-7">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.StartDateDay, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group-custom">
                            @Html.EditorFor(model => model.StartDateDay, new { htmlAttributes = new { @class = "form-control DayWidth datepicker" } })
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeWidth", title = "Time component of start date" } })
                            @Html.DropDownList("StartAMPMddl", Model.StartAMPMList, new { @class = "form-control AMPMWidth", title = "AM PM component of start date" })
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.EndDateDay, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group-custom">
                            @Html.EditorFor(model => model.EndDateDay, new { htmlAttributes = new { @class = "form-control DayWidth datepicker" } })
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeWidth", title = "Time component of end date" } })
                            @Html.DropDownList("EndAMPMddl", Model.EndAMPMList, new { @class = "form-control AMPMWidth", title = "AM PM component of end date" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { id = "StartTime-error", @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.StartDateDay, "", new { id = "StartDateDay-error", @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.SelectedStartAMPM, "", new { id = "SelectedStartAMPM-error", @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { id = "EndTime-error", @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.EndDateDay, "", new { id = "EndDateDay-error", @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.SelectedEndAMPM, "", new { id = "SelectedEndAMPM-error", @class = "text-danger" })
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <button id="ResetDate" type="button" class="btn">Reset Date</button>
                    </div>
                </div>
                <div class="col-md-5 col-sm-5 col-xs-5 col-left col-nomargin dateSelector">
                    <div id="StartEndDaySelector" class="col-nomargin col-left jquery-datepickermoveleft"></div>
                </div>

            </div>
        </div>
        <div>
            <button id="CreateMetric" type="button" class="btn btn-primary">Create Chart &nbsp;<span id='RunReportSpinner' class="glyphicon"></span></button>

        </div>
    </div>
</form>
<div id="ChartCommentPlaceHolder"></div>
<div id="ReportPlaceHolder"></div>




@section Scripts
{
    
    <script type="text/javascript" src="~/Scripts/DefaultCharts.js"></script>
    <script type="text/javascript" src="~/Scripts/Map.js"></script>
    <script type="text/javascript" src="~/Scripts/GetMetrics.js"></script>
    <script type="text/javascript" src="~/Scripts/AddData.js"></script>
    <script type="text/javascript" src="~/Scripts/SignalsSearch.js"></script>
    <script>
    var urlpathPhaseTermination = '@Url.Action("GetPhaseTerminationMetric", "DefaultCharts")';
    var urlpathPedDelay = '@Url.Action("GetPedDelayMetric", "DefaultCharts")';
    var urlpathTMC = '@Url.Action("GetTMCMetric", "DefaultCharts")';
    var urlpathPCD = '@Url.Action("GetPCDMetric", "DefaultCharts")';
    var urlpathSplitMonitor = '@Url.Action("GetSplitMonitorMetric", "DefaultCharts")';
    var urlpathPreempt = '@Url.Action("GetPreemptMetric", "DefaultCharts")';
    var urlpathApproachVolume = '@Url.Action("GetApproachVolumeMetric", "DefaultCharts")';
    var urlpathApproachDelay = '@Url.Action("GetApproachDelayMetric", "DefaultCharts")';
    var urlpathAoR = '@Url.Action("GetAoRMetric", "DefaultCharts")';
    var urlpathApproachSpeed = '@Url.Action("GetApproachSpeedMetric", "DefaultCharts")';
    var urlpathYellowAndRed = '@Url.Action("GetYellowAndRedMetric", "DefaultCharts")';
    var urlpathSplitFail = '@Url.Action("GetSplitFailMetric", "DefaultCharts")';
    var urlpathGetSignalLocation = '@Url.Action("GetSignalLocation", "DefaultCharts")';
    var urlpathSignalInfoBox = '@Url.Action("SignalInfoBox", "DefaultCharts")';
    var urlpathGetMetricsList = '@Url.Action("GetMetricsList", "DefaultCharts")';
    var urlpathGetChartComment = '@Url.Action("GetChartComment", "DefaultCharts")';
    var urlpathFillSignals = '@Url.Action("FillSignals", "DefaultCharts")';
    var urlOptions = '@Url.Action("MetricOptions", "DefaultCharts")';

    </script>




}