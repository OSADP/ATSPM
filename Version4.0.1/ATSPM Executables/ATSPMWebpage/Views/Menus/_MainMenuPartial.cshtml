@model IEnumerable<MOE.Common.Models.ViewModel._MainMenu.MenuItem>

@foreach (var m in Model)
{
    @RenderMenuItems(m)
}

@helper RenderMenuItems(MOE.Common.Models.ViewModel._MainMenu.MenuItem m)
{
    if (m.SubMenuItems.Count == 0)
    {
        <li>
            @Html.ActionLink(m.MenuObject.MenuName, m.MenuObject.Action, m.MenuObject.Controller, new { id = UrlParameter.Optional }, new { @class = "menuItem" })
        </li>
    }
    else
    {
        if(@m.MenuObject.ParentId == 0)
        { 
            if(m.MenuObject.MenuName != "Admin" || (m.MenuObject.MenuName == "Admin" && m.IsAdmin))
            { 
        <li>
            @*<a tabindex="-1" href="@Url.Action(m.MenuObject.Action, m.MenuObject.Controller, new { id = UrlParameter.Optional }, this.Request.Url.Scheme)" class=" dropdown-toggle menuitem" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@m.MenuObject.MenuName <span class="caret"></span></a>*@
            <a href="#" class="dropdown-toggle menuItem" data-toggle="dropdown">@m.MenuObject.MenuName </a>
            <ul class="dropdown-menu multi-level">
                @foreach (var s in m.SubMenuItems)
                {
                    @RenderMenuItems(s)
                }
                @if (m.MenuObject.MenuName == "Links")
                {
                        foreach (MOE.Common.Models.ExternalLink e in m.ExternalLinks.OrderBy(x => x.DisplayOrder).ToList())
                        {
                            <li><a href="@e.Url" class="menuItem">@e.Name</a></li>
                        }
                }
            </ul>

        </li>
            }
            else if ( (m.MenuObject.MenuName == "Admin" && m.IsTechnician))
            {
                foreach (var s in m.SubMenuItems)
                {
                    if(s.MenuObject.MenuName == "Signal Configuration")
                    { 
                        @RenderMenuItems(s)
                    }
                }
            }
        }
        else
        {
            <li class ="dropdown-submenu">
                @*<a tabindex="-1" href="@Url.Action(m.MenuObject.Action, m.MenuObject.Controller, new { id = UrlParameter.Optional }, this.Request.Url.Scheme)" class=" dropdown-toggle menuitem" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@m.MenuObject.MenuName <span class="caret"></span></a>*@
                <a href="#" class="dropdown-toggle menuItem" data-toggle="dropdown">@m.MenuObject.MenuName </a>
                <ul class="dropdown-menu">
                    @foreach (var s in m.SubMenuItems)
                    {
                        @RenderMenuItems(s)
                    }
                </ul>

            </li>
        }
    }
}